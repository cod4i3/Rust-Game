{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2","program":"/Users/code413/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","c_str_macro","/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=ebdd32e742bf7473","-C","extra-filename=-ebdd32e742bf7473","--out-dir","/Users/code413/program/Rust/Rust-game/game/target/rls/debug/deps","-L","dependency=/Users/code413/program/Rust/Rust-game/game/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/code413/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/code413/program/Rust/Rust-game/game/target/rls/debug/deps/libc_str_macro-ebdd32e742bf7473.rmeta"},"prelude":{"crate_id":{"name":"c_str_macro","disambiguator":[3906994579997975116,16110702116288489556]},"crate_root":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src","external_crates":[{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","num":1,"id":{"name":"std","disambiguator":[5910180239328109903,279773339453024198]}},{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","num":2,"id":{"name":"core","disambiguator":[13511297098663441791,13154330100699476404]}},{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3277486079989407075,17943763516068403788]}},{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2077472581434032296,16471800650332436877]}},{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","num":5,"id":{"name":"alloc","disambiguator":[6080923438680138448,14195335843426821389]}},{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","num":6,"id":{"name":"libc","disambiguator":[1356100850129081594,9097101615995702594]}},{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","num":7,"id":{"name":"unwind","disambiguator":[5921159961707824016,14013822414726087416]}},{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1138973083447649293,1688603632818648317]}},{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","num":9,"id":{"name":"backtrace","disambiguator":[13138323699967107576,8974460855248662014]}},{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9500888470717765493,17092073675944042020]}},{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[2312912048730511338,18260434057743106393]}},{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","num":12,"id":{"name":"hashbrown","disambiguator":[16177307682575393950,4440920517740374143]}},{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14958077028657982302,11930047013765948913]}},{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[4183850045203119219,771502449638896420]}}],"span":{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","byte_start":442,"byte_end":2385,"line_start":10,"line_end":63,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","byte_start":442,"byte_end":2385,"line_start":10,"line_end":63,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3}],"decl_id":null,"docs":" A macro to produce C-compatible string data from literals.","sig":null,"attributes":[{"value":"crate_name = \"c_str_macro\"","span":{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","byte_start":442,"byte_end":472,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"crate_type = \"lib\"","span":{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","byte_start":473,"byte_end":495,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"! A macro to produce C-compatible string data from literals.","span":{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","byte_start":497,"byte_end":559,"line_start":13,"line_end":13,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","byte_start":560,"byte_end":563,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! In Rust code using FFI bindings, it is often necessary to pass in a static","span":{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","byte_start":564,"byte_end":642,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"! constant string that must follow the C string format, i.e. be terminated","span":{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","byte_start":643,"byte_end":719,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"! with a 0 byte. Rust string literals, unlike in C or C++, do not","span":{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","byte_start":720,"byte_end":787,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"! translate to implicitly null-terminated string data, so the terminating","span":{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","byte_start":788,"byte_end":863,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"! `\"\\0\"` has to be explicitly present to make the string safe to pass","span":{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","byte_start":864,"byte_end":935,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"! to a C API. This is kludgy and can easily be forgotten.","span":{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","byte_start":936,"byte_end":995,"line_start":20,"line_end":20,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","byte_start":996,"byte_end":999,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! To alleviate this issue, this crate provides the `c_str!` macro that","span":{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","byte_start":1000,"byte_end":1072,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"! takes a Rust string literal, appends a terminating 0 byte, and casts","span":{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","byte_start":1073,"byte_end":1145,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"! the output value to a `std::ffi::CStr` reference.","span":{"file_name":"/Users/code413/.cargo/registry/src/github.com-1ecc6299db9ec823/c_str_macro-1.0.2/src/c_str.rs","byte_start":1146,"byte_end":1199,"line_start":24,"line_end":24,"column_start":1,"column_end":54}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}